package CorbaApp2;


/**
* CorbaApp2/_ShoppingCartStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CorbaApp2.idl
* sobota, 24 czerwca 2017 13:56:40 CEST
*/

public class _ShoppingCartStub extends org.omg.CORBA.portable.ObjectImpl implements CorbaApp2.ShoppingCart
{

  public CorbaApp2.Customer customer ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_customer", true);
                $in = _invoke ($out);
                CorbaApp2.Customer $result = CorbaApp2.CustomerHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return customer (        );
            } finally {
                _releaseReply ($in);
            }
  } // customer

  public void customer (CorbaApp2.Customer newCustomer)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_customer", true);
                CorbaApp2.CustomerHelper.write ($out, newCustomer);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                customer (newCustomer        );
            } finally {
                _releaseReply ($in);
            }
  } // customer

  public CorbaApp2.OrderItem[] orders ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_orders", true);
                $in = _invoke ($out);
                CorbaApp2.OrderItem $result[] = CorbaApp2.OrdersHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return orders (        );
            } finally {
                _releaseReply ($in);
            }
  } // orders

  public void addToCart (CorbaApp2.Product product, int qty, CorbaApp2.Customer cust) throws CorbaApp2.StockIsEmpty
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addToCart", true);
                CorbaApp2.ProductHelper.write ($out, product);
                $out.write_long (qty);
                CorbaApp2.CustomerHelper.write ($out, cust);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CorbaApp2/StockIsEmpty:1.0"))
                    throw CorbaApp2.StockIsEmptyHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addToCart (product, qty, cust        );
            } finally {
                _releaseReply ($in);
            }
  } // addToCart

  public void removeFromCart (CorbaApp2.Product product, int qty, CorbaApp2.Customer cust) throws CorbaApp2.NoEnoughItems
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeFromCart", true);
                CorbaApp2.ProductHelper.write ($out, product);
                $out.write_long (qty);
                CorbaApp2.CustomerHelper.write ($out, cust);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CorbaApp2/NoEnoughItems:1.0"))
                    throw CorbaApp2.NoEnoughItemsHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeFromCart (product, qty, cust        );
            } finally {
                _releaseReply ($in);
            }
  } // removeFromCart

  public String sumItUp (CorbaApp2.Customer cust)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sumItUp", true);
                CorbaApp2.CustomerHelper.write ($out, cust);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sumItUp (cust        );
            } finally {
                _releaseReply ($in);
            }
  } // sumItUp

  public void clear (CorbaApp2.Customer cust)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("clear", true);
                CorbaApp2.CustomerHelper.write ($out, cust);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                clear (cust        );
            } finally {
                _releaseReply ($in);
            }
  } // clear

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CorbaApp2/ShoppingCart:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ShoppingCartStub
